// Row
//
// Rows contain your columns.

@if $enable-grid-classes {
    .row {
      @include make-row();
  
      > * {
        @include make-col-ready();
      }
    }
  }
  
  
  // Columns
  //
  // Common styles for small and large grid columns
  
  @if $enable-grid-classes {
    @include make-grid-columns();
  }
  

  /// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-row($gutter: $grid-gutter-width) {
    --#{$variable-prefix}gutter-x: #{$gutter};
    --#{$variable-prefix}gutter-y: 0;
    display: flex;
    flex-wrap: wrap;
    margin-top: calc(var(--#{$variable-prefix}gutter-y) * -1); // stylelint-disable-line function-disallowed-list
    margin-right: calc(var(--#{$variable-prefix}gutter-x) / -2); // stylelint-disable-line function-disallowed-list
    margin-left: calc(var(--#{$variable-prefix}gutter-x) / -2); // stylelint-disable-line function-disallowed-list
  }
  
  @mixin make-col-ready($gutter: $grid-gutter-width) {
    // Add box sizing if only the grid is loaded
    box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);
    // Prevent columns from becoming too narrow when at smaller grid tiers by
    // always setting `width: 100%;`. This works because we set the width
    // later on to override this initial width.
    flex-shrink: 0;
    width: 100%;
    max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid
    padding-right: calc(var(--#{$variable-prefix}gutter-x) / 2); // stylelint-disable-line function-disallowed-list
    padding-left: calc(var(--#{$variable-prefix}gutter-x) / 2); // stylelint-disable-line function-disallowed-list
    margin-top: var(--#{$variable-prefix}gutter-y);
  }
  
  @mixin make-col($size: false, $columns: $grid-columns) {
    @if $size {
      flex: 0 0 auto;
      width: percentage($size / $columns);
    } @else {
      flex: 1 1 0;
      max-width: 100%;
    }
  }
  
  @mixin make-col-auto() {
    flex: 0 0 auto;
    width: auto;
  }
  
  @mixin make-col-offset($size, $columns: $grid-columns) {
    $num: $size / $columns;
    margin-left: if($num == 0, 0, percentage($num));
  }
  
  // Row columns
  //
  // Specify on a parent element(e.g., .row) to force immediate children into NN
  // numberof columns. Supports wrapping to new lines, but does not do a Masonry
  // style grid.
  @mixin row-cols($count) {
    > * {
      flex: 0 0 auto;
      width: 100% / $count;
    }
  }
  
  // Framework grid generation
  //
  // Used only by Bootstrap to generate the correct number of grid classes given
  // any value of `$grid-columns`.
  
  @mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    @each $breakpoint in map-keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);
  
      @include media-breakpoint-up($breakpoint, $breakpoints) {
        // Provide basic `.col-{bp}` classes for equal-width flexbox columns
        .col#{$infix} {
          flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
        }
  
        .row-cols#{$infix}-auto > * {
          @include make-col-auto();
        }
  
        @if $grid-row-columns > 0 {
          @for $i from 1 through $grid-row-columns {
            .row-cols#{$infix}-#{$i} {
              @include row-cols($i);
            }
          }
        }
  
        .col#{$infix}-auto {
          @include make-col-auto();
        }
  
        @if $columns > 0 {
          @for $i from 1 through $columns {
            .col#{$infix}-#{$i} {
              @include make-col($i, $columns);
            }
          }
  
          // `$columns - 1` because offsetting by the width of an entire row isn't possible
          @for $i from 0 through ($columns - 1) {
            @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
              .offset#{$infix}-#{$i} {
                @include make-col-offset($i, $columns);
              }
            }
          }
        }
  
        // Gutters
        //
        // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
        @each $key, $value in $gutters {
          .g#{$infix}-#{$key},
          .gx#{$infix}-#{$key} {
            --#{$variable-prefix}gutter-x: #{$value};
          }
  
          .g#{$infix}-#{$key},
          .gy#{$infix}-#{$key} {
            --#{$variable-prefix}gutter-y: #{$value};
          }
        }
      }
    }
  }
  

  .VIpgJd-ZVi9od-ORHb-OEVmcd {
    left: 0;
    top: 0;
    height: 39px;
    width: 100%;
    z-index: 10000001;
    position: fixed;
    border: none;
    border-bottom: 1px solid #6B90DA;
    margin: 0;
    box-shadow: 0 0 8px 1px #999
}

.VIpgJd-ZVi9od-xl07Ob-OEVmcd {
    z-index: 10000002;
    border: none;
    position: fixed;
    box-shadow: 0 3px 8px 2px #999
}

.VIpgJd-ZVi9od-SmfZ-OEVmcd {
    z-index: 10000000;
    border: none;
    margin: 0
}

.goog-te-gadget {
    font-family: arial;
    font-size: 11px;
    color: #666;
    white-space: nowrap
}

.goog-te-gadget img {
    vertical-align: middle;
    border: none
}

.goog-te-gadget-simple {
    background-color: #FFF;
    border-left: 1px solid #D5D5D5;
    border-top: 1px solid #9B9B9B;
    border-bottom: 1px solid #E8E8E8;
    border-right: 1px solid #D5D5D5;
    font-size: 10pt;
    display: inline-block;
    padding-top: 1px;
    padding-bottom: 2px;
    cursor: pointer
}

.goog-te-gadget-icon {
    margin-left: 2px;
    margin-right: 2px;
    width: 19px;
    height: 19px;
    border: none;
    vertical-align: middle
}

.goog-te-combo {
    margin-left: 4px;
    margin-right: 4px;
    vertical-align: baseline
}

.goog-te-gadget .goog-te-combo {
    margin: 4px 0
}

.VIpgJd-ZVi9od-l4eHX-hSRGPd,
.VIpgJd-ZVi9od-l4eHX-hSRGPd:link,
.VIpgJd-ZVi9od-l4eHX-hSRGPd:visited,
.VIpgJd-ZVi9od-l4eHX-hSRGPd:hover,
.VIpgJd-ZVi9od-l4eHX-hSRGPd:active {
    font-size: 12px;
    font-weight: bold;
    color: #444;
    text-decoration: none
}

.VIpgJd-ZVi9od-ORHb .VIpgJd-ZVi9od-l4eHX-hSRGPd,
.VIpgJd-ZVi9od-TvD9Pc-hSRGPd {
    display: block;
    margin: 0 10px
}

.VIpgJd-ZVi9od-ORHb .VIpgJd-ZVi9od-l4eHX-hSRGPd {
    padding-top: 2px;
    padding-left: 4px
}

.goog-te-combo,
.VIpgJd-ZVi9od-ORHb *,
.VIpgJd-ZVi9od-SmfZ *,
.VIpgJd-ZVi9od-xl07Ob *,
.VIpgJd-ZVi9od-vH1Gmf *,
.VIpgJd-ZVi9od-l9xktf * {
    font-family: arial;
    font-size: 10pt
}

.VIpgJd-ZVi9od-ORHb {
    margin: 0;
    background-color: #E4EFFB;
    overflow: hidden
}

.VIpgJd-ZVi9od-ORHb img {
    border: none
}

.VIpgJd-ZVi9od-ORHb-bN97Pc {
    color: #000
}

.VIpgJd-ZVi9od-ORHb-bN97Pc img {
    vertical-align: middle
}

.VIpgJd-ZVi9od-ORHb-Tswv1b {
    color: #666;
    vertical-align: top;
    margin-top: 0;
    font-size: 7pt
}

.VIpgJd-ZVi9od-ORHb-KE6vqe {
    width: 8px
}

.VIpgJd-ZVi9od-LgbsSe {
    border-color: #E7E7E7;
    border-style: none solid solid none;
    border-width: 0 1px 1px 0
}

.VIpgJd-ZVi9od-LgbsSe div {
    border-color: #CCC #999 #999 #CCC;
    border-right: 1px solid #999;
    border-style: solid;
    border-width: 1px;
    height: 20px
}

.VIpgJd-ZVi9od-LgbsSe button {
    background: transparent;
    border: none;
    cursor: pointer;
    height: 20px;
    overflow: hidden;
    margin: 0;
    vertical-align: top;
    white-space: nowrap
}

.VIpgJd-ZVi9od-LgbsSe button:active {
    background: none repeat scroll 0 0 #CCC
}

.VIpgJd-ZVi9od-SmfZ {
    margin: 0;
    background-color: #FFF;
    white-space: nowrap
}

.VIpgJd-ZVi9od-SmfZ-hSRGPd {
    text-decoration: none;
    font-weight: bold;
    font-size: 10pt;
    border: 1px outset #888;
    padding: 6px 10px;
    white-space: nowrap;
    position: absolute;
    left: 0;
    top: 0
}

.VIpgJd-ZVi9od-SmfZ-hSRGPd img {
    margin-left: 2px;
    margin-right: 2px;
    width: 19px;
    height: 19px;
    border: none;
    vertical-align: middle
}

.VIpgJd-ZVi9od-SmfZ-hSRGPd span {
    text-decoration: underline;
    margin-left: 2px;
    margin-right: 2px;
    vertical-align: middle
}

.goog-te-float-top .VIpgJd-ZVi9od-SmfZ-hSRGPd {
    padding: 2px;
    border-top-width: 0
}

.goog-te-float-bottom .VIpgJd-ZVi9od-SmfZ-hSRGPd {
    padding: 2px;
    border-bottom-width: 0
}

.VIpgJd-ZVi9od-xl07Ob-lTBxed {
    text-decoration: none;
    color: #00C;
    white-space: nowrap;
    margin-left: 4px;
    margin-right: 4px
}

.VIpgJd-ZVi9od-xl07Ob-lTBxed span {
    text-decoration: underline
}

.VIpgJd-ZVi9od-xl07Ob-lTBxed img {
    margin-left: 2px;
    margin-right: 2px
}

.goog-te-gadget-simple .VIpgJd-ZVi9od-xl07Ob-lTBxed {
    color: #000
}

.goog-te-gadget-simple .VIpgJd-ZVi9od-xl07Ob-lTBxed span {
    text-decoration: none
}

.VIpgJd-ZVi9od-xl07Ob {
    background-color: #FFF;
    text-decoration: none;
    border: 2px solid #C3D9FF;
    overflow-y: scroll;
    overflow-x: hidden;
    position: absolute;
    left: 0;
    top: 0
}

.VIpgJd-ZVi9od-xl07Ob-ibnC6b {
    padding: 3px;
    text-decoration: none
}

.VIpgJd-ZVi9od-xl07Ob-ibnC6b,
.VIpgJd-ZVi9od-xl07Ob-ibnC6b:link {
    color: #00C;
    background: #FFF
}

.VIpgJd-ZVi9od-xl07Ob-ibnC6b:visited {
    color: #551A8B
}

.VIpgJd-ZVi9od-xl07Ob-ibnC6b:hover {
    background: #C3D9FF
}

.VIpgJd-ZVi9od-xl07Ob-ibnC6b:active {
    color: #00C
}

.VIpgJd-ZVi9od-vH1Gmf {
    background-color: #FFF;
    text-decoration: none;
    border: 1px solid #6B90DA;
    overflow: hidden;
    padding: 4px
}

.VIpgJd-ZVi9od-vH1Gmf-KrhPNb {
    width: 16px
}

.VIpgJd-ZVi9od-vH1Gmf-hgDUwe {
    margin: 6px 0;
    height: 1px;
    background-color: #aaa;
    overflow: hidden
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd div {
    padding: 4px
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b .uDEFge {
    display: none
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd .uDEFge {
    display: auto
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd .fmcmS {
    padding-left: 4px;
    padding-right: 4px
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd {
    text-decoration: none
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b:link div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b:visited div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b:active div {
    color: #00C;
    background: #FFF
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b:hover div {
    color: #FFF;
    background: #36C
}

.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd:link div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd:visited div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd:hover div,
.VIpgJd-ZVi9od-vH1Gmf-ibnC6b-gk6SMd:active div {
    color: #000;
    font-weight: bold
}

.VIpgJd-ZVi9od-l9xktf {
    background-color: #FFF;
    overflow: hidden;
    padding: 8px;
    border: none;
    border-radius: 10px
}

.VIpgJd-ZVi9od-l9xktf-OEVmcd {
    background-color: #FFF;
    border: 1px solid #6B90DA;
    box-shadow: 0 3px 8px 2px #999;
    border-radius: 8px
}

.VIpgJd-ZVi9od-l9xktf img {
    border: none
}

.VIpgJd-ZVi9od-l9xktf-fmcmS {
    margin-top: 6px
}

.VIpgJd-ZVi9od-l9xktf-VgwJlc {
    margin-top: 6px;
    white-space: nowrap
}

.VIpgJd-ZVi9od-l9xktf-VgwJlc * {
    vertical-align: middle
}

.VIpgJd-ZVi9od-l9xktf-VgwJlc .DUGJie {
    background-image: url(https://www&google.com/images/zippy_minus_sm.gif)
}

.VIpgJd-ZVi9od-l9xktf-VgwJlc .TdyTDe {
    background-image: url(https://www&google.com/images/zippy_plus_sm.gif)
}

.VIpgJd-ZVi9od-l9xktf-VgwJlc span {
    color: #00C;
    text-decoration: underline;
    cursor: pointer;
    margin: 0 4px
}

.VIpgJd-ZVi9od-l9xktf-I9GLp {
    margin: 6px 0 0
}

.VIpgJd-ZVi9od-l9xktf-I9GLp form {
    margin: 0
}

.VIpgJd-ZVi9od-l9xktf-I9GLp form textarea {
    margin-bottom: 4px;
    width: 100%
}

.VIpgJd-ZVi9od-l9xktf-yePe5c {
    margin: 6px 0 4px
}

.VIpgJd-ZVi9od-aZ2wEe-wOHMyf {
    z-index: 1000;
    position: fixed;
    -webkit-transition-delay: .6s;
    transition-delay: .6s;
    left: -1000px;
    top: -1000px
}

.VIpgJd-ZVi9od-aZ2wEe-wOHMyf-ti6hGc {
    -webkit-transition-delay: 0s;
    transition-delay: 0s;
    left: -14px;
    top: -14px
}

.VIpgJd-ZVi9od-aZ2wEe-OiiCO {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
    align-items: center;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    width: 104px;
    height: 104px;
    border-radius: 50px;
    background: #FFF url(https://www.gstatic.com/images/branding/product/2x/translate_24dp.png) 50% 50% no-repeat;
    -webkit-transition: all .6s ease-in-out;
    transition: all .6s ease-in-out;
    -webkit-transform: scale(.4);
    transform: scale(.4);
    opacity: 0
}

.VIpgJd-ZVi9od-aZ2wEe-OiiCO-ti6hGc {
    -webkit-transform: scale(.5);
    transform: scale(.5);
    opacity: 1
}

.VIpgJd-ZVi9od-aZ2wEe {
    margin: 2px 0 0 2px;
    -webkit-animation: spinner-rotator 1.4s linear infinite;
    animation: spinner-rotator 1.4s linear infinite
}

@-webkit-keyframes spinner-rotator {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg)
    }

    100% {
        -webkit-transform: rotate(270deg);
        transform: rotate(270deg)
    }
}

@keyframes spinner-rotator {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg)
    }

    100% {
        -webkit-transform: rotate(270deg);
        transform: rotate(270deg)
    }
}

.VIpgJd-ZVi9od-aZ2wEe-Jt5cK {
    stroke-dasharray: 187;
    stroke-dashoffset: 0;
    stroke: #4285F4;
    -webkit-transform-origin: center;
    transform-origin: center;
    -webkit-animation: spinner-dash 1.4s ease-in-out infinite;
    animation: spinner-dash 1.4s ease-in-out infinite
}

@-webkit-keyframes spinner-dash {
    0% {
        stroke-dashoffset: 187
    }

    50% {
        stroke-dashoffset: 46.75;
        -webkit-transform: rotate(135deg);
        transform: rotate(135deg)
    }

    100% {
        stroke-dashoffset: 187;
        -webkit-transform: rotate(450deg);
        transform: rotate(450deg)
    }
}

@keyframes spinner-dash {
    0% {
        stroke-dashoffset: 187
    }

    50% {
        stroke-dashoffset: 46.75;
        -webkit-transform: rotate(135deg);
        transform: rotate(135deg)
    }

    100% {
        stroke-dashoffset: 187;
        -webkit-transform: rotate(450deg);
        transform: rotate(450deg)
    }
}

.VIpgJd-yAWNEb-L7lbkb html,
.VIpgJd-yAWNEb-L7lbkb body,
.VIpgJd-yAWNEb-L7lbkb div,
.VIpgJd-yAWNEb-L7lbkb span,
.VIpgJd-yAWNEb-L7lbkb iframe,
.VIpgJd-yAWNEb-L7lbkb h1,
.VIpgJd-yAWNEb-L7lbkb h2,
.VIpgJd-yAWNEb-L7lbkb h3,
.VIpgJd-yAWNEb-L7lbkb h4,
.VIpgJd-yAWNEb-L7lbkb h5,
.VIpgJd-yAWNEb-L7lbkb h6,
.VIpgJd-yAWNEb-L7lbkb p,
.VIpgJd-yAWNEb-L7lbkb a,
.VIpgJd-yAWNEb-L7lbkb img,
.VIpgJd-yAWNEb-L7lbkb ol,
.VIpgJd-yAWNEb-L7lbkb ul,
.VIpgJd-yAWNEb-L7lbkb li,
.VIpgJd-yAWNEb-L7lbkb table,
.VIpgJd-yAWNEb-L7lbkb form,
.VIpgJd-yAWNEb-L7lbkb tbody,
.VIpgJd-yAWNEb-L7lbkb tr,
.VIpgJd-yAWNEb-L7lbkb td {
    margin: 0;
    padding: 0;
    border: 0;
    font: inherit;
    font-size: 100%;
    vertical-align: baseline;
    text-align: left;
    line-height: normal
}

.VIpgJd-yAWNEb-L7lbkb ol,
.VIpgJd-yAWNEb-L7lbkb ul {
    list-style: none
}

.VIpgJd-yAWNEb-L7lbkb table {
    border-collapse: collapse;
    border-spacing: 0
}

.VIpgJd-yAWNEb-L7lbkb caption,
.VIpgJd-yAWNEb-L7lbkb th,
.VIpgJd-yAWNEb-L7lbkb td {
    text-align: left;
    font-weight: normal
}

.VIpgJd-yAWNEb-L7lbkb input::-moz-focus-inner {
    border: 0
}

div>.VIpgJd-yAWNEb-L7lbkb {
    padding: 10px 14px
}

.VIpgJd-yAWNEb-L7lbkb {
    color: #222;
    background-color: #fff;
    border: 1px solid #eee;
    box-shadow: 0 4px 16px rgba(0, 0, 0, .2);
    -moz-box-shadow: 0 4px 16px rgba(0, 0, 0, .2);
    -webkit-box-shadow: 0 4px 16px rgba(0, 0, 0, .2);
    display: none;
    font-family: arial;
    font-size: 10pt;
    width: 420px;
    padding: 12px;
    position: absolute;
    z-index: 10000
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-nVMfcd-fmcmS,
.VIpgJd-yAWNEb-yAWNEb-Vy2Aqc-pbTTYe {
    clear: both;
    font-size: 10pt;
    position: relative;
    text-align: justify;
    width: 100%
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-r4nke {
    color: #999;
    font-family: arial, sans-serif;
    margin: 4px 0;
    text-align: left
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-TvD9Pc-LgbsSe {
    display: none
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-l4eHX {
    float: left;
    margin: 0
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-Z0Arqf-PLDbbf {
    display: inline-block
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-fw42Ze-Z0Arqf-haAclf {
    display: none;
    width: 100%
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-Z0Arqf-H9tDt {
    margin-top: 20px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-LK5yu {
    float: left
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-qwU8Me {
    float: right
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-cGMI2b {
    min-height: 15px;
    position: relative;
    height: 1%
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-jOfkMb-Ne3sFf {
    background: -webkit-linear-gradient(top, #29910d 0, #20af0e 100%);
    background: -webkit-gradient(linear, left top, left bottom, from(#29910d), to(#20af0e));
    background: linear-gradient(top, #29910d 0, #20af0e 100%);
    background: #29910d;
    border-radius: 4px;
    -moz-border-radius: 4px;
    -webkit-border-radius: 4px;
    box-shadow: inset 0 2px 2px #1e6609;
    -moz-box-shadow: inset 0 2px 2px #1e6609;
    -webkit-box-shadow: inset 0 2px 2px #1e6609;
    color: white;
    font-size: 9pt;
    font-weight: bolder;
    margin-top: 12px;
    padding: 6px;
    text-shadow: 1px 1px 1px #1e6609
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-Z0Arqf-hSRGPd {
    color: #15c;
    cursor: pointer;
    font-family: arial;
    font-size: 11px;
    margin-right: 15px;
    text-decoration: none
}

.VIpgJd-yAWNEb-L7lbkb>textarea {
    font-family: arial;
    resize: vertical;
    width: 100%;
    margin-bottom: 10px;
    border-radius: 1px;
    border: 1px solid #d9d9d9;
    border-top: 1px solid silver;
    font-size: 13px;
    height: auto;
    overflow-y: auto;
    padding: 1px
}

.VIpgJd-yAWNEb-L7lbkb textarea:focus {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, .3);
    border: 1px solid #4d90fe;
    outline: none
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-Z0Arqf-IbE0S {
    margin-right: 10px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp {
    min-height: 25px;
    vertical-align: middle;
    padding-top: 8px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp {
    margin-bottom: 5px;
    margin-bottom: 0
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input {
    display: inline-block;
    min-width: 54px;
    *min-width: 70px;
    border: 1px solid #dcdcdc;
    border: 1px solid rgba(0, 0, 0, .1);
    text-align: center;
    color: #444;
    font-size: 11px;
    font-weight: bold;
    height: 27px;
    outline: 0;
    padding: 0 8px;
    vertical-align: middle;
    line-height: 27px;
    margin: 0 16px 0 0;
    box-shadow: 0 1px 2px rgba(0, 0, 0, .1);
    -moz-box-shadow: 0 1px 2px rgba(0, 0, 0, .1);
    -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, .1);
    border-radius: 2px;
    -webkit-transition: all .218s;
    transition: all .218s;
    background-color: #f5f5f5;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#f5f5f5), to(#f1f1f1));
    background-image: -webkit-linear-gradient(top, #f5f5f5, #f1f1f1);
    background-image: linear-gradient(top, #f5f5f5, #f1f1f1);
    -webkit-user-select: none;
    -moz-user-select: none;
    cursor: default
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:hover {
    border: 1px solid #c6c6c6;
    color: #222;
    -webkit-transition: all 0s;
    transition: all 0s;
    background-color: #f8f8f8;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#f8f8f8), to(#f1f1f1));
    background-image: -webkit-linear-gradient(top, #f8f8f8, #f1f1f1);
    background-image: linear-gradient(top, #f8f8f8, #f1f1f1)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:active {
    border: 1px solid #c6c6c6;
    color: #333;
    background-color: #f6f6f6;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#f6f6f6), to(#f1f1f1));
    background-image: -webkit-linear-gradient(top, #f6f6f6, #f1f1f1);
    background-image: linear-gradient(top, #f6f6f6, #f1f1f1)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:focus .VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input.AHmuwe .VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:active,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:focus:active {
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .5);
    -webkit-box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .5);
    -moz-box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .5)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:focus,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input.AHmuwe {
    outline: none;
    border: 1px solid #4d90fe;
    z-index: 4 !important
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input.gk6SMd {
    background-color: #eee;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#eee), to(#e0e0e0));
    background-image: -webkit-linear-gradient(top, #eee, #e0e0e0);
    background-image: linear-gradient(top, #eee, #e0e0e0);
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);
    border: 1px solid #ccc;
    color: #333
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf {
    color: white;
    border-color: #3079ed;
    background-color: #4d90fe;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#4d90fe), to(#4787ed));
    background-image: -webkit-linear-gradient(top, #4d90fe, #4787ed);
    background-image: linear-gradient(top, #4d90fe, #4787ed)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:hover .VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:focus,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf.AHmuwe .VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:active {
    border-color: #3079ed;
    background-color: #357ae8;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#4d90fe), to(#357ae8));
    background-image: -webkit-linear-gradient(top, #4d90fe, #357ae8);
    background-image: linear-gradient(top, #4d90fe, #357ae8)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:hover {
    box-shadow: inset 0 0 0 1px #fff, 0 1px 1px rgba(0, 0, 0, .1);
    -webkit-box-shadow: inset 0 0 0 1px #fff, 0 1px 1px rgba(0, 0, 0, .1);
    -moz-box-shadow: inset 0 0 0 1px #fff, 0 1px 1px rgba(0, 0, 0, .1)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:focus,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input.AHmuwe,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:active,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input:hover,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:focus,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf.AHmuwe,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:active,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-L4Nn5e-I9GLp .VIpgJd-yAWNEb-Z0Arqf-I9GLp input .VIpgJd-yAWNEb-Z0Arqf-sFeBqf:hover {
    border-color: #3079ed
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-mrxPge {
    color: #999;
    font-family: arial, sans-serif
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-W0vJo-fmcmS {
    color: #999;
    font-size: 11px;
    font-family: arial, sans-serif;
    margin: 15px 0 5px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-u0pjoe-fmcmS {
    color: #800;
    display: none;
    font-size: 9pt
}

.VIpgJd-yAWNEb-VIpgJd-fmcmS-sn54Q {
    background-color: #c9d7f1;
    box-shadow: 2px 2px 4px #99a;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    position: relative
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-xl07Ob .VIpgJd-yAWNEb-VIpgJd-xl07Ob {
    background: #fff;
    border: 1px solid #ddd;
    box-shadow: 0 2px 4px #99a;
    min-width: 0;
    outline: none;
    padding: 0;
    position: absolute;
    z-index: 2000
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-xl07Ob .VIpgJd-yAWNEb-VIpgJd-j7LFlb {
    cursor: pointer;
    padding: 2px 5px 5px;
    margin-right: 0;
    border-style: none
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-xl07Ob .VIpgJd-yAWNEb-VIpgJd-j7LFlb:hover {
    background: #ddd
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-xl07Ob .VIpgJd-yAWNEb-VIpgJd-j7LFlb h1 {
    font-size: 100%;
    font-weight: bold;
    margin: 4px 0
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-xl07Ob .VIpgJd-yAWNEb-VIpgJd-j7LFlb strong {
    color: #345aad
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-VIpgJd-eKm5Fc-hFsbo {
    text-align: right;
    position: absolute;
    right: 0;
    left: auto
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-VIpgJd-j7LFlb-SIsrTd .VIpgJd-yAWNEb-VIpgJd-eKm5Fc-hFsbo {
    text-align: left;
    position: absolute;
    left: 0;
    right: auto
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-yAWNEb-Vy2Aqc-fmcmS,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-TVLw9c-ppHlrf-sn54Q {
    background-color: #f1ea00;
    border-radius: 4px;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    box-shadow: rgba(0, 0, 0, .5) 3px 3px 4px;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    color: #f1ea00;
    cursor: pointer;
    margin: -2px -2px -2px -3px;
    padding: 2px 2px 2px 3px;
    position: relative
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-TVLw9c-ppHlrf-sn54Q {
    color: #222
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-yAWNEb-Vy2Aqc-pbTTYe {
    color: white;
    position: absolute !important
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-TVLw9c-ppHlrf,
.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-TVLw9c-ppHlrf .VIpgJd-yAWNEb-TVLw9c-ppHlrf-sn54Q {
    background-color: #c9d7f1;
    border-radius: 4px 4px 0 0;
    -webkit-border-radius: 4px 4px 0 0;
    -moz-border-radius: 4px 4px 0 0;
    box-shadow: rgba(0, 0, 0, .5) 3px 3px 4px;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    cursor: pointer;
    margin: -2px -2px -2px -3px;
    padding: 2px 2px 3px 3px;
    position: relative
}

.VIpgJd-yAWNEb-L7lbkb span:focus {
    outline: none
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-TVLw9c-DyVDA {
    background-color: transparent;
    border: 1px solid #4d90fe;
    border-radius: 0;
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    margin: -2px;
    padding: 1px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-yAWNEb-TVLw9c-sn54Q-LzX3ef {
    border-left: 2px solid red;
    margin-left: -2px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-yAWNEb-TVLw9c-sn54Q-YIAiIb {
    border-right: 2px solid red;
    margin-right: -2px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-YPqjbf {
    padding: 2px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-YPqjbf-fmcmS {
    font-size: 11px;
    padding: 2px 2px 3px;
    margin: 0;
    background-color: #fff;
    color: #333;
    border: 1px solid #d9d9d9;
    border-top: 1px solid #c0c0c0;
    display: inline-block;
    vertical-align: top;
    height: 21px;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-border-radius: 1px
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-YPqjbf-fmcmS:hover {
    border: 1px solid #b9b9b9;
    border-top: 1px solid #a0a0a0;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1)
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-YPqjbf-fmcmS:focus {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, .3);
    outline: none;
    border: 1px solid #4d90fe
}

.VIpgJd-yAWNEb-L7lbkb .VIpgJd-yAWNEb-IFdKyd-YPqjbf-sFeBqf {
    font-size: 11px;
    padding: 2px 6px 3px;
    margin: 0 0 0 2px;
    height: 21px
}

.VIpgJd-yAWNEb-hvhgNd {
    font-family: "Google Sans", Arial, sans-serif
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-l4eHX-i3jM8c {
    position: absolute;
    top: 10px;
    left: 14px
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-l4eHX-SIsrTd {
    position: absolute;
    top: 10px;
    right: 14px
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-k77Iif-i3jM8c,
.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-k77Iif-SIsrTd {
    margin: 16px;
    padding: 0
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-IuizWc {
    margin: 0 0 0 36px;
    padding: 0;
    color: #747775;
    font-size: 14px;
    font-weight: 500
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-k77Iif-SIsrTd .VIpgJd-yAWNEb-hvhgNd-IuizWc {
    text-align: right;
    margin: 0 36px 0 0
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-axAV1 {
    width: auto;
    padding: 12px 0 0;
    color: #1f1f1f;
    font-size: 16px;
    text-align: initial
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-axAV1 .VIpgJd-yAWNEb-SIsrTd {
    text-align: right
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-N7Eqid {
    border-radius: 0 0 12px 12px;
    margin: 0;
    background: #f1f4f9;
    position: relative;
    min-height: 50px
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-N7Eqid .VIpgJd-yAWNEb-SIsrTd {
    text-align: right
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-N7Eqid-B7I4Od {
    display: inline-block;
    width: 77%;
    padding: 12px
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-N7Eqid-B7I4Od .VIpgJd-yAWNEb-SIsrTd {
    text-align: right
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-UTujCb {
    color: #1f1f1f;
    font-size: 12px;
    font-weight: 500
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-N7Eqid-B7I4Od .VIpgJd-yAWNEb-SIsrTd .VIpgJd-yAWNEb-hvhgNd-UTujCb {
    text-align: right
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-eO9mKe {
    color: #444746;
    font-size: 12px;
    padding-top: 4px
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-N7Eqid-B7I4Od .VIpgJd-yAWNEb-SIsrTd .VIpgJd-yAWNEb-hvhgNd-eO9mKe {
    text-align: right
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-xgov5 {
    position: absolute;
    top: 10px;
    right: 5px
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-xgov5 .VIpgJd-yAWNEb-SIsrTd {
    left: 5px;
    right: auto
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-THI6Vb {
    fill: #0b57d0
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-bgm6sf {
    margin: -4px 2px 0 0;
    padding: 2px 0 0;
    width: 48px;
    height: 48px;
    border: none;
    border-radius: 24px;
    cursor: pointer;
    background: none
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-bgm6sf:hover {
    background: #e8ebec
}

.VIpgJd-yAWNEb-hvhgNd .VIpgJd-yAWNEb-hvhgNd-aXYTce {
    display: none
}

sentinel {}


// .modal-open      - body class for killing the scroll
// .modal           - container to scroll within
// .modal-dialog    - positioning shell for the actual modal
// .modal-content   - actual modal w/ bg and corners and stuff


// Container that the modal scrolls within
.modal {
    position: fixed;
    top: 0;
    left: 0;
    z-index: $zindex-modal;
    display: none;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    // Prevent Chrome on Windows from adding a focus outline. For details, see
    // https://github.com/twbs/bootstrap/pull/10951.
    outline: 0;
    // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
    // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
    // See also https://github.com/twbs/bootstrap/issues/17695
  }
  
  // Shell div to position the modal with bottom padding
  .modal-dialog {
    position: relative;
    width: auto;
    margin: $modal-dialog-margin;
    // allow clicks to pass through for custom click handling to close modal
    pointer-events: none;
  
    // When fading in the modal, animate it to slide down
    .modal.fade & {
      @include transition($modal-transition);
      transform: $modal-fade-transform;
    }
    .modal.show & {
      transform: $modal-show-transform;
    }
  
    // When trying to close, animate focus to scale
    .modal.modal-static & {
      transform: $modal-scale-transform;
    }
  }
  
  .modal-dialog-scrollable {
    height: subtract(100%, $modal-dialog-margin * 2);
  
    .modal-content {
      max-height: 100%;
      overflow: hidden;
    }
  
    .modal-body {
      overflow-y: auto;
    }
  }
  
  .modal-dialog-centered {
    display: flex;
    align-items: center;
    min-height: subtract(100%, $modal-dialog-margin * 2);
  }
  
  // Actual modal
  .modal-content {
    position: relative;
    display: flex;
    flex-direction: column;
    width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
    // counteract the pointer-events: none; in the .modal-dialog
    color: $modal-content-color;
    pointer-events: auto;
    background-color: $modal-content-bg;
    background-clip: padding-box;
    border: $modal-content-border-width solid $modal-content-border-color;
    @include border-radius($modal-content-border-radius);
    @include box-shadow($modal-content-box-shadow-xs);
    // Remove focus outline from opened modal
    outline: 0;
  }
  
  // Modal background
  .modal-backdrop {
    position: fixed;
    top: 0;
    left: 0;
    z-index: $zindex-modal-backdrop;
    width: 100vw;
    height: 100vh;
    background-color: $modal-backdrop-bg;
  
    // Fade for backdrop
    &.fade { opacity: 0; }
    &.show { opacity: $modal-backdrop-opacity; }
  }
  
  // Modal header
  // Top section of the modal w/ title and dismiss
  .modal-header {
    display: flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
    padding: $modal-header-padding;
    border-bottom: $modal-header-border-width solid $modal-header-border-color;
    @include border-top-radius($modal-content-inner-border-radius);
  
    .btn-close {
      padding: ($modal-header-padding-y / 2) ($modal-header-padding-x / 2);
      margin: ($modal-header-padding-y / -2) ($modal-header-padding-x / -2) ($modal-header-padding-y / -2) auto;
    }
  }
  
  // Title text within header
  .modal-title {
    margin-bottom: 0;
    line-height: $modal-title-line-height;
  }
  
  // Modal body
  // Where all modal content resides (sibling of .modal-header and .modal-footer)
  .modal-body {
    position: relative;
    // Enable `flex-grow: 1` so that the body take up as much space as possible
    // when there should be a fixed height on `.modal-dialog`.
    flex: 1 1 auto;
    padding: $modal-inner-padding;
  }
  
  // Footer (for actions)
  .modal-footer {
    display: flex;
    flex-wrap: wrap;
    flex-shrink: 0;
    align-items: center; // vertically center
    justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
    padding: $modal-inner-padding - $modal-footer-margin-between / 2;
    border-top: $modal-footer-border-width solid $modal-footer-border-color;
    @include border-bottom-radius($modal-content-inner-border-radius);
  
    // Place margin between footer elements
    // This solution is far from ideal because of the universal selector usage,
    // but is needed to fix https://github.com/twbs/bootstrap/issues/24800
    > * {
      margin: $modal-footer-margin-between / 2;
    }
  }
  
  // Scale up the modal
  @include media-breakpoint-up(sm) {
    // Automatically set modal's width for larger viewports
    .modal-dialog {
      max-width: $modal-md;
      margin: $modal-dialog-margin-y-sm-up auto;
    }
  
    .modal-dialog-scrollable {
      height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);
    }
  
    .modal-dialog-centered {
      min-height: subtract(100%, $modal-dialog-margin-y-sm-up * 2);
    }
  
    .modal-content {
      @include box-shadow($modal-content-box-shadow-sm-up);
    }
  
    .modal-sm { max-width: $modal-sm; }
  }
  
  @include media-breakpoint-up(lg) {
    .modal-lg,
    .modal-xl {
      max-width: $modal-lg;
    }
  }
  
  @include media-breakpoint-up(xl) {
    .modal-xl { max-width: $modal-xl; }
  }
  
  // scss-docs-start modal-fullscreen-loop
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    $postfix: if($infix != "", $infix + "-down", "");
  
    @include media-breakpoint-down($breakpoint) {
      .modal-fullscreen#{$postfix} {
        width: 100vw;
        max-width: none;
        height: 100%;
        margin: 0;
  
        .modal-content {
          height: 100%;
          border: 0;
          @include border-radius(0);
        }
  
        .modal-header {
          @include border-radius(0);
        }
  
        .modal-body {
          overflow-y: auto;
        }
  
        .modal-footer {
          @include border-radius(0);
        }
      }
    }
  }
  // scss-docs-end modal-fullscreen-loop
  

  // stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix


// Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Normalize is licensed MIT. https://github.com/necolas/normalize.css


// Document
//
// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.

*,
*::before,
*::after {
  box-sizing: border-box;
}


// Root
//
// Ability to the value of the root font sizes, affecting the value of `rem`.
// null by default, thus nothing is generated.

:root {
  font-size: $font-size-root;

  @if $enable-smooth-scroll {
    @media (prefers-reduced-motion: no-preference) {
      scroll-behavior: smooth;
    }
  }
}


// Body
//
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Prevent adjustments of font size after orientation changes in iOS.
// 4. Change the default tap highlight to be completely transparent in iOS.

body {
  margin: 0; // 1
  font-family: $font-family-base;
  @include font-size($font-size-base);
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $body-color;
  text-align: $body-text-align;
  background-color: $body-bg; // 2
  -webkit-text-size-adjust: 100%; // 3
  -webkit-tap-highlight-color: rgba($black, 0); // 4
}


// Content grouping
//
// 1. Reset Firefox's gray color
// 2. Set correct height and prevent the `size` attribute to make the `hr` look like an input field

hr {
  margin: $hr-margin-y 0;
  color: $hr-color; // 1
  background-color: currentColor;
  border: 0;
  opacity: $hr-opacity;
}

hr:not([size]) {
  height: $hr-height; // 2
}


// Typography
//
// 1. Remove top margins from headings
//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
//    margin for easier control within type scales as it avoids margin collapsing.

%heading {
  margin-top: 0; // 1
  margin-bottom: $headings-margin-bottom;
  font-family: $headings-font-family;
  font-style: $headings-font-style;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}

h1 {
  @extend %heading;
  @include font-size($h1-font-size);
}

h2 {
  @extend %heading;
  @include font-size($h2-font-size);
}

h3 {
  @extend %heading;
  @include font-size($h3-font-size);
}

h4 {
  @extend %heading;
  @include font-size($h4-font-size);
}

h5 {
  @extend %heading;
  @include font-size($h5-font-size);
}

h6 {
  @extend %heading;
  @include font-size($h6-font-size);
}


// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.

p {
  margin-top: 0;
  margin-bottom: $paragraph-margin-bottom;
}


// Abbreviations
//
// 1. Duplicate behavior to the data-bs-* attribute for our tooltip plugin
// 2. Add the correct text decoration in Chrome, Edge, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Prevent the text-decoration to be skipped.

abbr[title],
abbr[data-bs-original-title] { // 1
  text-decoration: underline dotted; // 2
  cursor: help; // 3
  text-decoration-skip-ink: none; // 4
}


// Address

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}


// Lists

ol,
ul {
  padding-left: 2rem;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: $dt-font-weight;
}

// 1. Undo browser default

dd {
  margin-bottom: .5rem;
  margin-left: 0; // 1
}


// Blockquote

blockquote {
  margin: 0 0 1rem;
}


// Strong
//
// Add the correct font weight in Chrome, Edge, and Safari

b,
strong {
  font-weight: $font-weight-bolder;
}


// Small
//
// Add the correct font size in all browsers

small {
  @include font-size($small-font-size);
}


// Mark

mark {
  padding: $mark-padding;
  background-color: $mark-bg;
}


// Sub and Sup
//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.

sub,
sup {
  position: relative;
  @include font-size($sub-sup-font-size);
  line-height: 0;
  vertical-align: baseline;
}

sub { bottom: -.25em; }
sup { top: -.5em; }


// Links

a {
  color: $link-color;
  text-decoration: $link-decoration;

  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}

// And undo these styles for placeholder links/named anchors (without href).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.
// See https://github.com/twbs/bootstrap/issues/19402

a:not([href]):not([class]) {
  &,
  &:hover {
    color: inherit;
    text-decoration: none;
  }
}


// Code

pre,
code,
kbd,
samp {
  font-family: $font-family-code;
  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.
  direction: ltr #{"/* rtl:ignore */"};
  unicode-bidi: bidi-override;
}

// 1. Remove browser default top margin
// 2. Reset browser default of `1em` to use `rem`s
// 3. Don't allow content to break outside

pre {
  display: block;
  margin-top: 0; // 1
  margin-bottom: 1rem; // 2
  overflow: auto; // 3
  @include font-size($code-font-size);
  color: $pre-color;

  // Account for some code outputs that place code tags in pre tags
  code {
    @include font-size(inherit);
    color: inherit;
    word-break: normal;
  }
}

code {
  @include font-size($code-font-size);
  color: $code-color;
  word-wrap: break-word;

  // Streamline the style when inside anchors to avoid broken underline and more
  a > & {
    color: inherit;
  }
}

kbd {
  padding: $kbd-padding-y $kbd-padding-x;
  @include font-size($kbd-font-size);
  color: $kbd-color;
  background-color: $kbd-bg;
  @include border-radius($border-radius-sm);

  kbd {
    padding: 0;
    @include font-size(1em);
    font-weight: $nested-kbd-font-weight;
  }
}


// Figures
//
// Apply a consistent margin strategy (matches our type styles).

figure {
  margin: 0 0 1rem;
}


// Images and content

img,
svg {
  vertical-align: middle;
}


// Tables
//
// Prevent double borders

table {
  caption-side: bottom;
  border-collapse: collapse;
}

caption {
  padding-top: $table-cell-padding-y;
  padding-bottom: $table-cell-padding-y;
  color: $table-caption-color;
  text-align: left;
}

// 1. Removes font-weight bold by inheriting
// 2. Matches default `<td>` alignment by inheriting `text-align`.
// 3. Fix alignment for Safari

th {
  font-weight: $table-th-font-weight; // 1
  text-align: inherit; // 2
  text-align: -webkit-match-parent; // 3
}

thead,
tbody,
tfoot,
tr,
td,
th {
  border-color: inherit;
  border-style: solid;
  border-width: 0;
}


// Forms
//
// 1. Allow labels to use `margin` for spacing.

label {
  display: inline-block; // 1
}

// Remove the default `border-radius` that macOS Chrome adds.
// See https://github.com/twbs/bootstrap/issues/24093

button {
  // stylelint-disable-next-line property-disallowed-list
  border-radius: 0;
}

// Explicitly remove focus outline in Chromium when it shouldn't be
// visible (e.g. as result of mouse click or touch tap). It already
// should be doing this automatically, but seems to currently be
// confused and applies its very visible two-tone outline anyway.

button:focus:not(:focus-visible) {
  outline: 0;
}

// 1. Remove the margin in Firefox and Safari

input,
button,
select,
optgroup,
textarea {
  margin: 0; // 1
  font-family: inherit;
  @include font-size(inherit);
  line-height: inherit;
}

// Remove the inheritance of text transform in Firefox
button,
select {
  text-transform: none;
}
// Set the cursor for non-`<button>` buttons
//
// Details at https://github.com/twbs/bootstrap/pull/30562
[role="button"] {
  cursor: pointer;
}

select {
  // Remove the inheritance of word-wrap in Safari.
  // See https://github.com/twbs/bootstrap/issues/24990
  word-wrap: normal;

  // Undo the opacity change from Chrome
  &:disabled {
    opacity: 1;
  }
}

// Remove the dropdown arrow in Chrome from inputs built with datalists.
// See https://stackoverflow.com/a/54997118

[list]::-webkit-calendar-picker-indicator {
  display: none;
}

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
// 3. Opinionated: add "hand" cursor to non-disabled button elements.

button,
[type="button"], // 1
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; // 2

  @if $enable-button-pointers {
    &:not(:disabled) {
      cursor: pointer; // 3
    }
  }
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.

::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

// 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.

textarea {
  resize: vertical; // 1
}

// 1. Browsers set a default `min-width: min-content;` on fieldsets,
//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.
//    So we reset that to ensure fieldsets behave more like a standard block element.
//    See https://github.com/twbs/bootstrap/issues/12359
//    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
// 2. Reset the default outline behavior of fieldsets so they don't affect page layout.

fieldset {
  min-width: 0; // 1
  padding: 0; // 2
  margin: 0; // 2
  border: 0; // 2
}

// 1. By using `float: left`, the legend will behave like a block element.
//    This way the border of a fieldset wraps around the legend if present.
// 2. Fix wrapping bug.
//    See https://github.com/twbs/bootstrap/issues/29712

legend {
  float: left; // 1
  width: 100%;
  padding: 0;
  margin-bottom: $legend-margin-bottom;
  @include font-size($legend-font-size);
  font-weight: $legend-font-weight;
  line-height: inherit;

  + * {
    clear: left; // 2
  }
}

// Fix height of inputs with a type of datetime-local, date, month, week, or time
// See https://github.com/twbs/bootstrap/issues/18842

::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-text,
::-webkit-datetime-edit-minute,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-year-field {
  padding: 0;
}

::-webkit-inner-spin-button {
  height: auto;
}

// 1. Correct the outline style in Safari.
// 2. This overrides the extra rounded corners on search inputs in iOS so that our
//    `.form-control` class can properly style them. Note that this cannot simply
//    be added to `.form-control` as it's not specific enough. For details, see
//    https://github.com/twbs/bootstrap/issues/11586.

[type="search"] {
  outline-offset: -2px; // 1
  -webkit-appearance: textfield; // 2
}

// 1. A few input types should stay LTR
// See https://rtlstyling.com/posts/rtl-styling#form-inputs
// 2. RTL only output
// See https://rtlcss.com/learn/usage-guide/control-directives/#raw

/* rtl:raw:
[type="tel"],
[type="url"],
[type="email"],
[type="number"] {
  direction: ltr;
}
*/

// Remove the inner padding in Chrome and Safari on macOS.

::-webkit-search-decoration {
  -webkit-appearance: none;
}

// Remove padding around color pickers in webkit browsers

::-webkit-color-swatch-wrapper {
  padding: 0;
}


// Inherit font family and line height for file input buttons

::file-selector-button {
  font: inherit;
}

// 1. Change font properties to `inherit`
// 2. Correct the inability to style clickable types in iOS and Safari.

::-webkit-file-upload-button {
  font: inherit; // 1
  -webkit-appearance: button; // 2
}

// Correct element displays

output {
  display: inline-block;
}

// Remove border from iframe

iframe {
  border: 0;
}

// Summary
//
// 1. Add the correct display in all browsers

summary {
  display: list-item; // 1
  cursor: pointer;
}


// Progress
//
// Add the correct vertical alignment in Chrome, Firefox, and Opera.

progress {
  vertical-align: baseline;
}


// Hidden attribute
//
// Always hide an element with the `hidden` HTML attribute.

[hidden] {
  display: none !important;
}


:root {
    // Custom variable values only support SassScript inside `#{}`.
    @each $color, $value in $colors {
      --#{$variable-prefix}#{$color}: #{$value};
    }
  
    @each $color, $value in $theme-colors {
      --#{$variable-prefix}#{$color}: #{$value};
    }
  
    // Use `inspect` for lists so that quoted items keep the quotes.
    // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
    --#{$variable-prefix}font-sans-serif: #{inspect($font-family-sans-serif)};
    --#{$variable-prefix}font-monospace: #{inspect($font-family-monospace)};
    --#{$variable-prefix}gradient: #{$gradient};
  }
  

  .fade {
    @include transition($transition-fade);
  
    &:not(.show) {
      opacity: 0;
    }
  }
  
  // scss-docs-start collapse-classes
  .collapse {
    &:not(.show) {
      display: none;
    }
  }
  
  .collapsing {
    height: 0;
    overflow: hidden;
    @include transition($transition-collapse);
  }
  // scss-docs-end collapse-classes
  

  // Utility generator
// Used to generate utilities & print utilities
@mixin generate-utility($utility, $infix, $is-rfs-media-query: false) {
    $values: map-get($utility, values);
  
    // If the values are a list or string, convert it into a map
    @if type-of($values) == "string" or type-of(nth($values, 1)) != "list" {
      $values: zip($values, $values);
    }
  
    @each $key, $value in $values {
      $properties: map-get($utility, property);
  
      // Multiple properties are possible, for example with vertical or horizontal margins or paddings
      @if type-of($properties) == "string" {
        $properties: append((), $properties);
      }
  
      // Use custom class if present
      $property-class: if(map-has-key($utility, class), map-get($utility, class), nth($properties, 1));
      $property-class: if($property-class == null, "", $property-class);
  
      // State params to generate pseudo-classes
      $state: if(map-has-key($utility, state), map-get($utility, state), ());
  
      $infix: if($property-class == "" and str-slice($infix, 1, 1) == "-", str-slice($infix, 2), $infix);
  
      // Don't prefix if value key is null (eg. with shadow class)
      $property-class-modifier: if($key, if($property-class == "" and $infix == "", "", "-") + $key, "");
  
      @if map-get($utility, rfs) {
        // Inside the media query
        @if $is-rfs-media-query {
          $val: rfs-value($value);
  
          // Do not render anything if fluid and non fluid values are the same
          $value: if($val == rfs-fluid-value($value), null, $val);
        }
        @else {
          $value: rfs-fluid-value($value);
        }
      }
  
      $is-rtl: map-get($utility, rtl);
  
      @if $value != null {
        @if $is-rtl == false {
          /* rtl:begin:remove */
        }
        .#{$property-class + $infix + $property-class-modifier} {
          @each $property in $properties {
            #{$property}: $value if($enable-important-utilities, !important, null);
          }
        }
  
        @each $pseudo in $state {
          .#{$property-class + $infix + $property-class-modifier}-#{$pseudo}:#{$pseudo} {
            @each $property in $properties {
              #{$property}: $value if($enable-important-utilities, !important, null);
            }
          }
        }
        @if $is-rtl == false {
          /* rtl:end:remove */
        }
      }
    }
  }
  


  .btn {
    display: inline-block;
    font-weight: 400;
    line-height: 1.5;
    color: #212529;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
    border: 1px solid transparent;
    padding: 0.375rem 0.75rem;
    font-size: 1rem;
    border-radius: 0.25rem;
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
  }